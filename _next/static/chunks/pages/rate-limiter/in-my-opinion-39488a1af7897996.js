(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[329],{609:function(e,t,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/rate-limiter/in-my-opinion",function(){return i(7848)}])},7848:function(e,t,i){"use strict";i.r(t),i.d(t,{__toc:function(){return d}});var r=i(5893),a=i(2673),n=i(373),o=i(8426);i(9128);var m=i(2643);let d=[{depth:2,value:"개인적인 생각",id:"개인적인-생각"}];function _createMdxContent(e){let t=Object.assign({h2:"h2",p:"p",code:"code"},(0,m.a)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"개인적인-생각",children:"개인적인 생각"}),"\n",(0,r.jsxs)(t.p,{children:["주요 테크회사 들 에서는 RateLimiter 를 정교하게 구현해서 사용하고 있을 것으로 추측됩니다. 기본으로 제공되는 lua 스크립트의 경우 나쁜 것은 아닌데 회사의 비즈니스 요구사항에 맞는 요청 유입량 제어 알고리즘이 필요할 것입니다.",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(t.p,{children:["기본 옵션이 적용된 채로 RateLimiter 를 배포하는 것은 초기 개발 중에는 가능하겠지만, 그 이후부터는 세세한 컨트롤을 위해서는 커스터마이징이 필요해집니다. 예를 들면 RateLimiter 알고리즘도 5개가 넘는 다양한 알고리즘이 존재합니다. 이런 알고리즘 들을 기본으로 설정된 스크립트를 그냥 사용하기에는 아쉽습니다. 토큰 버킷 알고리즘이 적용된 lua 스크립트를 보더라도 Redis 2.6.2 이후로 Deprecated 된 명령어를 그대로 사용하고 있습니다.",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(t.p,{children:["각 비즈니스마다 수용해야 하는 트래픽의 특성도 여러가지 입니다. 이런 이유로 가급적이면 Rate Limiter 를 커스터마이징해서 사용하는 것이 필요해보입니다. RedisRateLimiter 에 내장된 ",(0,r.jsx)(t.code,{children:"request_rate_limiter.lua"})," 를 그대로 사용하기보다는 꼭 필요한 Rate Limiter 알고리즘을 lua 스크립트로 개발해서 사용하는 것을 추천드립니다.",(0,r.jsx)("br",{})]})]})}let l={MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:t}=Object.assign({},(0,m.a)(),e.components);return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(_createMdxContent,{...e})}):_createMdxContent(e)},pageOpts:{filePath:"pages/rate-limiter/in-my-opinion.mdx",route:"/rate-limiter/in-my-opinion",timestamp:1715497421e3,pageMap:[{kind:"MdxPage",name:"filter",route:"/filter"},{kind:"MdxPage",name:"index",route:"/"},{kind:"Folder",name:"rate-limiter",route:"/rate-limiter",children:[{kind:"MdxPage",name:"example-custom-rate-limiter",route:"/rate-limiter/example-custom-rate-limiter"},{kind:"MdxPage",name:"example-rate-limiter",route:"/rate-limiter/example-rate-limiter"},{kind:"MdxPage",name:"in-my-opinion",route:"/rate-limiter/in-my-opinion"},{kind:"MdxPage",name:"inside-redis-rate-limiter",route:"/rate-limiter/inside-redis-rate-limiter"},{kind:"MdxPage",name:"redis-docker-compose",route:"/rate-limiter/redis-docker-compose"},{kind:"MdxPage",name:"redis-rate-limiter",route:"/rate-limiter/redis-rate-limiter"},{kind:"MdxPage",name:"token-bucket-algorithm",route:"/rate-limiter/token-bucket-algorithm"},{kind:"MdxPage",name:"what-is-rate-limiter",route:"/rate-limiter/what-is-rate-limiter"},{kind:"Meta",data:{"what-is-rate-limiter":"RateLimiter 의 개념","redis-docker-compose":"Redis docker-compose","example-rate-limiter":"RateLimiter 예제","example-custom-rate-limiter":"Custom Rate Limiter 예제","inside-redis-rate-limiter":"RedisRateLimiter의 내부 동작","token-bucket-algorithm":"Token Bucket Algorithm (Lua)","in-my-opinion":"In My Opinion","redis-rate-limiter":"Redis Rate Limiter"}}]},{kind:"MdxPage",name:"rate-limiter",route:"/rate-limiter"},{kind:"Meta",data:{index:"Introduction","rate-limiter":"Rate Limiter",filter:"Filter",contact:{title:"Contact ↗",type:"page",href:"-",newWindow:!0}}}],flexsearch:{codeblocks:!0},title:"In My Opinion",headings:d},pageNextRoute:"/rate-limiter/in-my-opinion",nextraLayout:n.ZP,themeConfig:o.Z};t.default=(0,a.j)(l)},8426:function(e,t,i){"use strict";var r=i(5893);i(7294);let a={logo:(0,r.jsx)("span",{children:"Docs Spring Cloud Gateway"}),project:{link:"https://github.com/chagchagchag/docs-spring-cloud-gateway"},docsRepositoryBase:"https://github.com/chagchagchag/docs-spring-cloud-gateway",footer:{text:"Nextra Docs Template"}};t.Z=a},5789:function(){}},function(e){e.O(0,[774,796,888,179],function(){return e(e.s=609)}),_N_E=e.O()}]);